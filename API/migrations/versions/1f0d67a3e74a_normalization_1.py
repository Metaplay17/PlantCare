"""normalization 1

Revision ID: 1f0d67a3e74a
Revises: bb154f4638b8
Create Date: 2025-06-03 16:21:54.071496

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f0d67a3e74a'
down_revision = 'bb154f4638b8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('calendar', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('calendar_user_id_fkey'), type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('notes_user_id_fkey'), type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('photos', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('photos_user_id_fkey'), type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('tasks_user_id_fkey'), type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('tasks_user_id_fkey'), 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('photos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('photos_user_id_fkey'), 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('notes_user_id_fkey'), 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('calendar', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('calendar_user_id_fkey'), 'users', ['user_id'], ['user_id'])

    # ### end Alembic commands ###
